name: 'kube demo cluster'
on:
  workflow_dispatch:
    inputs:
      lets-go:
        type: choice
        required: true
        description: Choose what to do
        default: plan
        options:
          - plan
          - apply
          - destroy

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_vm_admin_password: ${{ secrets.VM_ADMIN_PASSWORD }}
      TF_VAR_backend_storage_account_name: ${{ secrets.TF_VAR_BACKEND_STORAGE_ACCOUNT_NAME }}
      TF_VAR_backend_resource_group_name: ${{ secrets.TF_VAR_BACKEND_STORAGE_ACCOUNT_NAME }}
      TF_WORK_DIR: "deploy/terraform/environments/kube-demo"
      TF_STATE_KEY: "kubedemo"
      #TF_VAR_nsg_source_address_prefix: ${{ secrets.MY_IP_ADDRESS }}

    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Init
        if: (github.event.inputs.lets-go == 'plan' || github.event.inputs.lets-go == 'apply')
        run: |
          terraform -chdir=$TF_WORK_DIR init \
            -backend-config "resource_group_name=$TF_VAR_backend_resource_group_name" \
            -backend-config "storage_account_name=$TF_VAR_backend_resource_group_name" \
            -backend-config "key=$TF_STATE_KEY" -upgrade

      - name: Terraform Plan
        if: github.event.inputs.lets-go == 'plan'
        run: |
          terraform -chdir="$TF_WORK_DIR" plan

        # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      - name: Terraform Apply
        if: github.event.inputs.lets-go == 'apply'
        run: |
          terraform -chdir=$TF_WORK_DIR apply -auto-approve

      - name: Terraform Destroy
        if: github.event.inputs.lets-go == 'destroy'
        run: |
          terraform -chdir=$TF_WORK_DIR init \
          -backend-config "resource_group_name=$TF_VAR_backend_resource_group_name" \
          -backend-config "storage_account_name=$TF_VAR_backend_resource_group_name" \
          -backend-config "key=$TF_STATE_KEY" -upgrade
          terraform -chdir=$TF_WORK_DIR apply -destroy -auto-approve